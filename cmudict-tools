#!/usr/bin/python
#
# Tool for processing the CMU Pronunciation Dictionary file formats.
#
# Copyright (C) 2015 Reece H. Dunn
#
# This file is part of cmudict-tools.
#
# cmudict-tools is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cmudict-tools is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cmudict-tools.  If not, see <http://www.gnu.org/licenses/>.

from __future__ import print_function

import cmudict
import sys

def parse(filename, opts):
	return cmudict.parse(filename, check_trailing_whitespace=opts['check-trailing-whitespace'], check_missing_stress_marks=opts['check-missing-stress-marks'])

def print_dict(filename, opts={}):
	cmudict.format(opts.get('format', 'cmudict'), parse(filename, opts))

def debug(filename, opts={}):
	for entry in parse(filename, opts):
		print(entry)

def validate(filename, opts={}):
	for word, context, phonemes, comment, error in parse(filename, opts):
		if error:
			print(error, file=sys.stderr)

commands = {
	'debug':    debug,
	'validate': validate,
	'print':    print_dict,
}

try:
	command = None
	filename = None
	optname = None
	opts = { 'check-trailing-whitespace': False, 'check-missing-stress-marks': False }
	for arg in sys.argv[1:]:
		if arg.startswith('--'):
			arg = arg[2:]
			if '=' in arg:
				arg, value = arg.split('=')
			else:
				value = None
			if arg in ['format']:
				if value:
					opts[arg] = value
				else:
					optname = arg
			elif arg in ['check-trailing-whitespace', 'check-missing-stress-marks']:
				opts[arg] = True
		elif optname:
			opts[optname] = arg
			optname = None
		elif not command:
			command = commands[arg]
		elif not filename:
			filename = arg
		else:
			raise Exception('invalid argument')
except:
	print('usage: cmudict-tools debug    <filename>')
	print('usage: cmudict-tools validate <filename>')
	print('usage: cmudict-tools print    <filename>')
	sys.exit(1)

command(filename, opts)
